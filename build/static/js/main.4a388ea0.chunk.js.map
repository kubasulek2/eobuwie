{"version":3,"sources":["components/atoms/star/Star.module.css","components/atoms/label/Label.module.css","components/molecules/date_picker/DatePicker.module.css","components/pages/app/App.module.css","components/atoms/divider/Divider.module.css","components/atoms/input/Input.module.css","components/molecules/card_header/ReservationHeader.module.css","utils/joinClassNames.ts","styles/colors.ts","components/atoms/button/Button.tsx","components/atoms/divider/Divider.tsx","components/atoms/input/Input.tsx","components/atoms/label/Label.tsx","utils/scoreToStarValue.ts","components/atoms/star/Star.tsx","components/molecules/star_rating/StarRating.tsx","components/molecules/card_header/ReservationHeader.tsx","utils/findFocusableElements.ts","hooks/usePickerKeyboardControl.ts","utils/crossBrowserElClosest.ts","hooks/usePrevious.ts","components/molecules/date_picker/DatePickerModal.tsx","utils/getCalendarMonthBoundries.ts","utils/computeCalendarDays.ts","components/molecules/date_picker/DatePicker.tsx","components/organisms/ReservationCard/ReservationCard.tsx","components/pages/app/App.tsx","index.tsx","components/organisms/ReservationCard/ReservationCard.module.css","components/molecules/star_rating/StarRating.module.css","components/atoms/button/Button.module.css"],"names":["module","exports","joinClassNames","names","join","teal","teal_light_bg","gray_bg","text_medium_dark","text_medium","Button","children","id","onClick","type","size","classes","disabled","htmlProps","className","styles","button","aria-disabled","Boolean","undefined","Divider","data-testid","divider","Input","value","onChange","placeholder","input","e","target","Label","idFor","title","required","htmlFor","label","scoreToStarValue","score","index","TypeError","result","Star","rating","sizeClass","small","medium","large","classlist","iconName","role","StarRating","votes","container","wrapper","aria-label","map","num","ReservationHeader","price","findFocusableElements","el","Array","from","querySelectorAll","filter","hasAttribute","getAttribute","usePickerKeyboardControl","pickerOpen","setPickerOpen","useState","lastActiveElement","setLastActiveElement","useEffect","mouseHandler","selector","Element","prototype","matches","msMatchesSelector","webkitMatchesSelector","closest","parentElement","parentNode","nodeType","crossBrowserElClosest","keyboardHandler","preventDefault","key","picker","document","getElementById","Error","elements","focusIndex","findIndex","activeElement","length","shiftKey","focus","click","addEventListener","removeEventListener","firstFocusableEl","DAYS_OF_WEEK","DatePickerModal","open","availableDates","onDates","Date","date","setDate","monthDays","setMonthDays","prevDate","ref","useRef","current","usePrevious","firstDay","startOfMonth","lastDay","endOfMonth","firstDayOfWeek","startOfWeek","daysToFirst","differenceInDays","monthLength","getDaysInMonth","daysToAdd","isSameDay","addDays","getCalendarMonthBoundries","start","end","startDate","endDate","selectedDate","isBefore","daysDiff","differenceInCalendarDays","d","isSameMonth","days","i","currentDay","push","available","some","weekDay","getDay","today","isToday","timeStamp","getTime","dateString","format","computeCalendarDays","calendarRows","_","modal","hidden","aria-hidden","aria-modal","modal_header","month_arrow_btn","prev","addMonths","month_arrow","month_arrow_left","month","getFullYear","month_arrow_right","calendar_container","week_names","day","week_day","calendar_row","tabIndex","data-date","calendar_cell","DatePicker","pickerId","modalId","useMemo","startDateString","endDateString","startDateClasses","endDateClasses","modal_open","aria-controls","aria-haspopup","aria-describedby","arrow","ReservationCard","onSubmit","setEndDate","setStartDate","formError","card","formControl","errMsg","error","App","app","ReactDOM","render","StrictMode"],"mappings":"uFACAA,EAAOC,QAAU,CAAC,MAAQ,oBAAoB,OAAS,qBAAqB,MAAQ,sB,oBCApFD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,MAAQ,qBAAqB,OAAS,sBAAsB,MAAQ,uB,mBCAnHD,EAAOC,QAAU,CAAC,QAAU,4BAA4B,OAAS,2BAA2B,mBAAqB,uCAAuC,WAAa,+BAA+B,KAAO,yBAAyB,MAAQ,0BAA0B,MAAQ,0BAA0B,aAAe,iCAAiC,MAAQ,0BAA0B,YAAc,gCAAgC,iBAAmB,qCAAqC,kBAAoB,sCAAsC,gBAAkB,oCAAoC,mBAAqB,uCAAuC,WAAa,+BAA+B,SAAW,6BAA6B,aAAe,iCAAiC,cAAgB,oC,oBCAhyBD,EAAOC,QAAU,CAAC,IAAM,mB,oBCAxBD,EAAOC,QAAU,CAAC,QAAU,2B,oBCA5BD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,YAAc,6B,oBCA7DD,EAAOC,QAAU,CAAC,MAAQ,mC,8ICEbC,EAAiB,sCAAIC,EAAJ,yBAAIA,EAAJ,uBAAgCA,EAAMC,KAAK,MCG5DC,EAAO,OAGPC,EAAgB,gBAChBC,EAAU,UAIVC,EAAmB,mBACnBC,EAAc,c,wDCUZC,EAjBiB,SAAC,GAAqG,IAApGC,EAAmG,EAAnGA,SAAUC,EAAyF,EAAzFA,GAAIC,EAAqF,EAArFA,QAAqF,IAA5EC,YAA4E,MAArE,SAAqE,MAA3DC,YAA2D,MAApD,SAAoD,MAA1CC,eAA0C,MAAhC,GAAgC,EAA5BC,EAA4B,EAA5BA,SAAaC,EAAe,8EACnI,OACE,kDACMA,GADN,IAGEC,UAAWjB,EAAc,WAAd,GAAekB,IAAOC,OAAQD,IAAOL,GAAQE,EAAWG,IAAOH,SAAW,IAA1E,mBAAmFD,KAE9FM,gBAAeC,QAAQN,GACvBL,GAAIA,EACJE,KAAMA,EACND,QAAUI,OAAqBO,EAAVX,EARvB,SAUGF,M,kBCRQc,EAFoB,SAAC,GAAD,QAAET,eAAF,MAAY,GAAZ,SAAqB,oBAAIU,cAAY,UAAUP,UAAWjB,EAAc,WAAd,GAAekB,IAAOO,QAASpB,GAA/B,mBAA2CS,Q,kBCazHY,EAdgB,SAAC,GAA+E,IAA9EC,EAA6E,EAA7EA,MAAOC,EAAsE,EAAtEA,SAAUlB,EAA4D,EAA5DA,GAAImB,EAAwD,EAAxDA,YAAwD,IAA3CjB,YAA2C,MAAtC,OAAsC,MAA9BE,eAA8B,MAAtB,GAAsB,EAAfE,EAAe,wEAC5G,OACE,iDACMA,GADN,IAEEC,UAAWjB,EAAc,WAAd,GAAekB,IAAOY,MAAOvB,GAA7B,mBAA6CO,KACxDa,MAAOA,EACPC,SAAU,SAAAG,GAAC,OAAIH,EAASG,EAAEC,OAAOL,QACjCE,YAAaA,EACbjB,KAAMA,EACNF,GAAIA,M,kBCGKuB,EAZgB,SAAC,GAAoE,IAAnEC,EAAkE,EAAlEA,MAAOC,EAA2D,EAA3DA,MAA2D,IAApDrB,eAAoD,MAA1C,GAA0C,MAAtCsB,gBAAsC,aAApBvB,YAAoB,MAAb,QAAa,EACjG,OACE,wBACEW,cAAY,QACZa,QAASH,EACTjB,UAAWjB,EAAc,WAAd,GAAeM,EAAkBY,IAAOoB,MAAOpB,IAAOL,IAAtD,mBAAgEC,KAH7E,UAKGqB,EALH,IAKWC,EAAW,KAAO,O,kBCX1B,SAASG,EAAiBC,EAAeC,GAC9C,GAAGD,EAAQ,EAAG,MAAM,IAAIE,UAAU,+BAClC,GAAGD,EAAQ,EAAG,MAAM,IAAIC,UAAU,4BAClC,IAAMC,EAASF,EAAQD,EACvB,OAAOG,GAAU,EAAI,EAAIA,GAAU,GAAM,GAAM,E,sBCclCC,EAdc,SAAC,GAAiD,IAAD,IAA/C9B,eAA+C,MAArC,GAAqC,MAAjC+B,cAAiC,MAAxB,EAAwB,MAArBhC,YAAqB,MAAd,SAAc,EACtEiC,EAAqB,UAATjC,EAAmBK,IAAO6B,MAAiB,WAATlC,EAAoBK,IAAO8B,OAAS9B,IAAO+B,MACzFC,EAAYlD,EAAc,WAAd,GAAe,iBAAiBG,EAAM2C,GAAtC,mBAAmDhC,KAC/DqC,EAAsB,IAAXN,EAAe,OAAoB,KAAXA,EAAiB,YAAc,cAExE,OACE,qBAAKrB,cAAY,OAAO4B,KAAK,eAA7B,SACE,sBAAMnC,UAAWiC,EAAjB,SACGC,O,iBCYME,EAlB0B,SAAC,GAAyC,IAAxCb,EAAuC,EAAvCA,MAAOc,EAAgC,EAAhCA,MAAO5C,EAAyB,EAAzBA,GAAyB,IAArBG,YAAqB,MAAd,SAAc,EAChF,OACE,sBACEW,cAAY,cACZP,UAAWjB,EAAekB,IAAOqC,UAAWrC,IAAO,aAAeL,IAClEH,GAAIA,EAHN,UAKE,qBACEO,UAAWC,IAAOsC,QAClBC,aAAA,kBAAwBjB,EAAxB,sBAA6Cc,EAA7C,WAFF,SAIG,CAAC,EAAG,EAAG,EAAG,EAAG,GAAGI,KAAI,SAAAC,GAAG,OAAI,cAAC,EAAD,CAAMd,OAAQN,EAAiBC,EAAOmB,GAAM9C,KAAMA,GAAW8C,QAE3F,sBAAM1C,UAAWjB,EAAekB,IAAOoC,MAAO/C,EAAaW,IAAO,SAAWL,IAA7E,SAAsFyC,QCL7EM,EATwC,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,MAAMrB,EAAoB,EAApBA,MAAMc,EAAc,EAAdA,MAAM5C,EAAQ,EAARA,GACzE,OACE,sBAAKc,cAAY,cAAcd,GAAIA,EAAnC,UACE,qBAAIO,UAAWjB,EAAekB,IAAO2C,MRAlB,aQAqCJ,aAAW,oBAAnE,UAAwFI,EAAxF,cACA,cAAC,EAAD,CAAYrB,MAAOA,EAAOc,MAAOA,EAAOzC,KAAK,c,yBCd5C,SAASiD,EAAuBC,GACrC,OAAOC,MAAMC,KAAKF,EAAGG,iBAA8B,sFAChDC,QAAO,SAAAJ,GAAE,OAAKA,EAAGK,aAAa,cAAgBL,EAAGM,aAAa,kBCM5D,SAASC,EAA0BC,EAAqBC,EAAkD9D,GAAa,IAAD,EAEzE+D,mBAAyB,MAFgD,mBAEpHC,EAFoH,KAEjGC,EAFiG,KAK3HC,qBAAU,WAER,IAAMC,EAAe,SAAC9C,ICLnB,SAA+BgC,EAAae,GAOjD,GALMC,QAAgBC,UAAUC,UAC9BF,QAAQC,UAAUC,QAAUF,QAAQC,UAAUE,mBAAqBH,QAAQC,UAAUG,uBAIlFJ,QAAgBC,UAAUI,QAAS,OAAO/D,QAAQ0C,EAAGqB,QAAQN,IAElE,EAAG,CACD,GAAIf,EAAGkB,QAAQH,GAAW,OAAO,EAChCf,EAAiBA,EAAGsB,eAAiBtB,EAAGuB,iBAC3B,OAAPvB,GAA+B,IAAhBA,EAAGwB,UAE3B,OAAO,GDREC,CAAsBzD,EAAEC,OAAmB,IAAMtB,IACpD8D,GAAc,IAKZiB,EAAkB,SAAC1D,GAIvB,GAFAA,EAAE2D,iBAEY,WAAV3D,EAAE4D,IAAN,CAMA,IAAMC,EAASC,SAASC,eAAepF,GACvC,IAAKkF,EAAQ,MAAM,IAAIG,MAAM,kDAAoDrF,GAGjF,IAAMsF,EAA0BlC,EAAsB8B,GAEhDK,EAAaD,EAASE,WAAU,SAACnC,GAAD,OAAQA,IAAO8B,SAASM,iBAG9D,GAAKH,EAASI,OAGd,GAAe,QAAVrE,EAAE4D,MAAkB5D,EAAEsE,UAAuB,eAAVtE,EAAE4D,KACpB,IAAhBM,GAAsB,UAAWD,EAAS,GAAKA,EAAS,GAAGM,QAC1DN,GAAUC,EAAa,GAAKD,EAASI,QAAQE,aAKpD,GAAe,QAAVvE,EAAE4D,KAAiB5D,EAAEsE,UAAuB,cAAVtE,EAAE4D,IAAzC,CACE,IAAoB,IAAhBM,EAAmB,OAClBD,IAA0B,IAAfC,EAAmBD,EAASI,OAASH,GAAc,GAAKD,EAASI,QAAQE,YAK7E,UAAVvE,EAAE4D,KAAmBM,GAAc,GACrCD,EAASC,GAAYM,aAhCrB/B,GAAc,IA0ClB,OAJID,IACFsB,SAASW,iBAAiB,QAAS3B,GACnCgB,SAASW,iBAAiB,UAAWf,IAEhC,WACLI,SAASY,oBAAoB,QAAS5B,GACtCgB,SAASY,oBAAoB,UAAWhB,MAEzC,CAAClB,EAAYC,EAAe9D,IAI/BkE,qBAAU,WAER,IAAMgB,EAASC,SAASC,eAAepF,GACvC,GAAI6D,GAAcqB,IAAWlB,EAAmB,CAE9CC,EAAqBkB,SAASM,eAE9B,IAAMO,EAAmB5C,EAAsB8B,GAAQ,GACnDc,GAAkBA,EAAiBJ,aAE7B/B,GAAcG,IACvBA,EAAkC4B,QACnC3B,EAAqB,SAGtB,CAACJ,EAAYG,EAAmBC,EAAsBjE,I,2EE1FpD,I,iDCYP,IAAMiG,GAAe,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAkGjDC,GAzFoC,SAAC,GAAyC,IAAxCC,EAAuC,EAAvCA,KAAMnG,EAAiC,EAAjCA,GAAIoG,EAA6B,EAA7BA,eAA6B,KAAbC,QAErDtC,mBAAe,IAAIuC,OAF+C,mBAEnFC,EAFmF,KAE7EC,EAF6E,OAGxDzC,mBAAqB,IAHmC,mBAGnF0C,EAHmF,KAGxEC,EAHwE,KAOpFC,ED5BmB,SAAW1F,GACpC,IAAM2F,EAAMC,mBAKZ,OAHA3C,qBAAU,WACR0C,EAAIE,QAAU7F,IACb,CAACA,IACG2F,EAAIE,QCsBMC,CAAkBR,GAInCrC,qBAAU,WACR,GAAKiC,GAEAI,KAASE,EAAUf,QAAUa,IAASI,GAA3C,CAHc,MCrBX,SAAoCJ,GAEzC,IAAMS,EAAWC,YAAaV,GAGxBW,EAAUC,YAAWZ,GAGrBa,EAAiBC,YAAYL,GAG7BM,EAAcC,YAAiBP,EAAUI,GAGzCI,EAAcC,YAAelB,GAW7BmB,GALWF,EAAcF,EAAc,GAEjB,GAAK,KAGHA,EAAcE,GAI5C,OAZkC,KAAhBA,GAAsBG,YAAUX,EAAUI,GAYtC,CAACJ,EAAUE,GAI1B,CAACE,EAAgBQ,aAAQV,EAASQ,IDNlBG,CAA0BtB,GANjC,mBAMPuB,EANO,KAMAC,EANA,KASdrB,EE9BG,SACLsB,EACAC,EACA7B,GAEa,IADb8B,EACY,uDADiB,IAAI5B,KAGjC,GAAI6B,aAASF,EAASD,GAAY,MAAM,IAAIhG,UAAU,0CACtD,IAAMoG,EAAWC,aAAyBJ,EAASD,GAGnD5B,EAAiBA,EAAe3C,QAAO,SAAA6E,GAAC,OAAIC,aAAYD,EAAGJ,MAI3D,IAFA,IAAMM,EAAmB,GARb,WAUHC,GACP,IAAMC,EAAad,aAAQI,EAAWS,GAEtCD,EAAKG,KAAK,CACRC,UAAWxC,EAAeyC,MAAK,SAAAP,GAAC,OAAIX,YAAUW,EAAGI,MACjDI,QAASC,aAAOL,GAChBM,MAAOC,aAAQP,GACfQ,UAAWR,EAAWS,UACtBC,WAAYC,YAAOX,EAAY,iBAR1BD,EAAI,EAAGA,GAAKL,EAAUK,IAAM,EAA5BA,GAWT,OAAOD,EFIQc,CAAoBxB,EAAOC,EAAK3B,EAAgBG,OAC5D,CAACA,EAAMI,EAAUR,EAAMC,EAAgBM,EAAcD,IAGxD,IAAM8C,EAAejG,MAAMC,KAAK,CAACmC,OAAQe,EAAUf,OAAS,IAAI,SAAC8D,EAAGf,GAAJ,OAAUA,KAE1E,OACE,qBACElI,UAAWC,IAAOiJ,MAClBC,QAASvD,EACTwD,cAAaxD,EAAO,QAAU,OAC9ByD,aAAYzD,EAAO,OAAS,QAC5BzD,KAAK,SACLK,aAAW,2BACX/C,GAAIA,EAPN,SASE,gCAGE,sBAAKO,UAAWjB,EAAekB,IAAOqJ,ab5DvB,UAcG,ca8ClB,UACE,wBAAQtJ,UAAWC,IAAOsJ,gBAAiB7J,QAAS,kBAAMuG,GAAQ,SAAAuD,GAAI,OAAIC,YAAUD,GAAO,OAA3F,SACE,sBAAMxJ,UAAWjB,EAAeM,EAAkBY,IAAOyJ,YAAazJ,IAAO0J,sBAG/E,sBAAK3J,UAAWC,IAAO2J,MAAvB,UAA+Bd,YAAO9C,EAAM,QAA5C,IAAsDA,EAAK6D,iBAC3D,wBAAQ7J,UAAWC,IAAOsJ,gBAAiB7J,QAAS,kBAAMuG,GAAQ,SAAAuD,GAAI,OAAIC,YAAUD,EAAM,OAA1F,SACE,sBAAMxJ,UAAWjB,EAAeM,EAAkBY,IAAOyJ,YAAazJ,IAAO6J,0BAIjF,sBAAK3H,KAAK,OAAOnC,UAAWC,IAAO8J,mBAAnC,UACE,qBAAK5H,KAAK,MAAMnC,UAAWC,IAAO+J,WAAlC,SACGtE,GAAajD,KAAI,SAAAwH,GAAG,OACnB,qBAEA9H,KAAK,eACLnC,UAAWjB,EAAeO,EAAaW,IAAOiK,UAH9C,SAKGD,GAJEA,QAQRjB,EAAavG,KAAI,SAACjB,GAAD,OAChB,qBACEW,KAAK,MAELnC,UAAWC,IAAOkK,aAHpB,SAKGjE,EAAUhD,QAAO,SAACJ,EAAIoF,GAAL,OAAWA,EAAmB,GAAb1G,EAAQ,IAAW0G,GAAa,EAAR1G,KAAWiB,KAAI,SAAAK,GAAE,OAC1E,qBACEpD,QAAS,aACTyC,KAAK,WACLK,aAAA,qBAA0BM,EAAG+F,YAC7BuB,SAAU,EACVC,YAAWvH,EAAG+F,WAEd7I,UAAWC,IAAOqK,cAPpB,SASGxH,EAAG+F,YAHC/F,EAAG+F,gBAVP,OAASrH,eGjCb+I,GA9C0B,SAAC,GAA8C,IAA7C9C,EAA4C,EAA5CA,UAAWC,EAAiC,EAAjCA,QAASjI,EAAwB,EAAxBA,GAAIoG,EAAoB,EAApBA,eAAoB,EAEjDrC,oBAAkB,GAF+B,mBAE9EF,EAF8E,KAElEC,EAFkE,KAI/EiH,EAAW/K,GAAM,0BAEjBgL,EAAUC,mBAAQ,kBAAMjL,EAAKA,EAAK,SAAW,kCAAiC,CAACA,IAG/EkL,EAAkBlD,EAAYqB,YAAOrB,EAAW,cAAgB,WAChEmD,EAAgBlD,EAAUoB,YAAOpB,EAAS,cAAgB,YAG1DmD,EAAoBvH,GAAcmE,EAAa1I,EAAekB,IAAO+F,KAAM9G,EAAMC,GAAiBc,IAAO+F,KACzG8E,EAAiBpD,EAAU3I,EAAekB,IAAO+F,KAAM9G,EAAMC,GAAiBc,IAAO+F,KAM3F,OAFA3C,EAAyBC,EAAYC,EAAekH,GAGlD,sBAAKlK,cAAY,cAAcd,GAAI+K,EAAUxK,UAAWC,IAAOsC,QAA/D,UACE,yBACE7C,QAAS,kBAAM6D,GAAc,SAAAiG,GAAI,OAAKA,MACtCxJ,UAAWjB,EAAekB,IAAO0E,OAAQtF,EAAkBiE,EAAarD,IAAO8K,WAAa,IAC5FC,gBAAeR,EAAW,UAC1BS,gBAAc,OACdzI,aAAW,kCACX0I,mBAAkBV,EAAW,QAN/B,UAQE,sBAAMxK,UAAW6K,EAAjB,SAAoCF,IACpC,sBAAM3K,UAAWjB,EAAekB,IAAOkL,MAAO9L,KAC9C,sBAAMW,UAAW8K,EAAjB,SAAkCF,OAEpC,sBAAM5K,UAAU,kBAAkBP,GAAI+K,EAAW,QAAjD,oFAEA,cAAC,GAAD,CACE5E,KAAMtC,EACNuC,eAAgBA,EAChBpG,GAAIgL,EACJ3E,QAAS,mB,oBCmBFsF,GAtDoC,SAAC,GAE7C,IADLxI,EACI,EADJA,MAAOrB,EACH,EADGA,MAAOc,EACV,EADUA,MAAOgJ,EACjB,EADiBA,SAAU5D,EAC3B,EAD2BA,UAAWC,EACtC,EADsCA,QAAS7B,EAC/C,EAD+CA,eAAgByF,EAC/D,EAD+DA,WAAYC,EAC3E,EAD2EA,aAC3E,EAG8B/H,mBAAS,IAHvC,mBAGGgI,EAHH,aAKgChI,oBAAS,IALzC,6BAcJ,OACE,sBAAKxD,UAAWC,KAAOwL,KAAvB,UACE,cAAC,EAAD,CAAmB7I,MAAOA,EAAOrB,MAAOA,EAAOc,MAAOA,IACtD,cAAC,EAAD,IACA,uBAAMgJ,SAVW,SAACvK,GACpBA,EAAE2D,iBACF4G,KAQE,UAEE,sBAAKrL,UAAWC,KAAOyL,YAAvB,UACE,cAAC,EAAD,CAAOzK,MAAM,SAASC,MAAM,QAAQtB,KAAK,UACzC,cAAC,GAAD,CACEiG,eAAgBA,EAChB4B,UAAWA,EACXC,QAASA,EACT6D,aAAcA,EACdD,WAAYA,OAIhB,sBAAKtL,UAAWC,KAAOyL,YAAvB,UACE,cAAC,EAAD,CAAOzK,MAAM,SAASC,MAAM,UAAUtB,KAAK,UAC3C,cAAC,EAAD,CAAOH,GAAG,SAASmB,YAAY,gBAAgBF,MAAM,GAAGC,SAAU,kBAGpE,sBAAKX,UAAWC,KAAOyL,YAAvB,UACE,cAAC,EAAD,CAAOzK,MAAM,SAASC,MAAM,UAAUtB,KAAK,UAC3C,cAAC,EAAD,CAAOH,GAAG,SAASmB,YAAY,kBAAkBF,MAAM,GAAGC,SAAU,kBAGtE,sBAAKX,UAAWC,KAAOyL,YAAvB,UACE,mBAAG1L,UAAWjB,EAAekB,KAAO0L,OAAQH,EAAYvL,KAAO2L,MAAQ,IAAvE,SACGJ,IAEH,cAAC,EAAD,CAAQ7L,KAAK,SAASC,KAAK,SAASE,SAAUM,QAAQoL,GAAtD,8BCpCKK,GAlBE,WACf,OACE,qBAAK7L,UAAWjB,EAAekB,IAAO6L,IlBEb,iBkBFzB,SACE,cAAC,GAAD,CACEvK,MAAO,IACPc,MAAO,IACPO,MAAO,IACPiD,eAAgB,CAAC,OACjB4B,UAAW,KACXC,QAAS,KACT4D,WAAY,aACZC,aAAc,aACdF,SAAU,kBCZlBU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFrH,SAASC,eAAe,U,mBCV1BhG,EAAOC,QAAU,CAAC,KAAO,8BAA8B,YAAc,qCAAqC,OAAS,gCAAgC,MAAQ,iC,mBCA3JD,EAAOC,QAAU,CAAC,UAAY,8BAA8B,QAAU,4BAA4B,gBAAkB,oCAAoC,iBAAmB,qCAAqC,gBAAkB,oCAAoC,MAAQ,0BAA0B,YAAc,gCAAgC,aAAe,iCAAiC,YAAc,kC,mBCApZD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,sBAAsB,OAAS,uBAAuB,MAAQ,sBAAsB,SAAW,4B","file":"static/js/main.4a388ea0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"small\":\"Star_small__qUc7k\",\"medium\":\"Star_medium__3-qTs\",\"large\":\"Star_large__bkQkL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Label_label__1-cVp\",\"small\":\"Label_small__r53U2\",\"medium\":\"Label_medium__1_vBX\",\"large\":\"Label_large__1lkcS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"DatePicker_wrapper__3Q38h\",\"picker\":\"DatePicker_picker__2GIS6\",\"picker_placeholder\":\"DatePicker_picker_placeholder__26iw5\",\"modal_open\":\"DatePicker_modal_open__1RzH8\",\"date\":\"DatePicker_date__1OceY\",\"arrow\":\"DatePicker_arrow__cyhxM\",\"modal\":\"DatePicker_modal__3s4h7\",\"modal_header\":\"DatePicker_modal_header__2Hk0Z\",\"month\":\"DatePicker_month__18Ila\",\"month_arrow\":\"DatePicker_month_arrow__22Y78\",\"month_arrow_left\":\"DatePicker_month_arrow_left__33Hx1\",\"month_arrow_right\":\"DatePicker_month_arrow_right__9yqOp\",\"month_arrow_btn\":\"DatePicker_month_arrow_btn__1iPyZ\",\"calendar_container\":\"DatePicker_calendar_container__jW7D0\",\"week_names\":\"DatePicker_week_names__fjbW0\",\"week_day\":\"DatePicker_week_day__G6uuh\",\"calendar_row\":\"DatePicker_calendar_row__1wiY3\",\"calendar_cell\":\"DatePicker_calendar_cell__1BAhg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__3qm1O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"divider\":\"Divider_divider__3x4mr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__VzFn4\",\"hiddenInput\":\"Input_hiddenInput__bQmqe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"price\":\"ReservationHeader_price__3k-GB\"};","/**\r\n * pass list of class names as arguments and get concatenated string\r\n */\r\nexport const joinClassNames = (...names: string[]): string => names.join(' ');","/* Global css colors class names  */\r\nexport const cyan = \"cyan\";\r\nexport const cyan_bg = \"cyan_bg\";\r\nexport const cyan_light = \"cyan_light\";\r\nexport const cyan_light_bg = \"cyan_light_bg\";\r\nexport const red_bg = \"red_bg\";\r\nexport const teal = \"teal\";\r\nexport const teal_bg = \"teal_bg\";\r\nexport const teal_light = \"teal_light\";\r\nexport const teal_light_bg = \"teal_light_bg\";\r\nexport const gray_bg = \"gray_bg\";\r\nexport const gray_light_bg = \"gray_light_bg\";\r\nexport const white_bg = \"white_bg\";\r\nexport const text_dark = \"text_dark\";\r\nexport const text_medium_dark = \"text_medium_dark\";\r\nexport const text_medium = \"text_medium\";\r\nexport const text_white = \"text_white\";\r\n","import {FC} from 'react';\r\nimport {joinClassNames} from \"../../../utils/joinClassNames\";\r\nimport {ButtonProps} from \"./types\";\r\nimport styles from \"./Button.module.css\";\r\n\r\n/**\r\n * Button component. Warm red color by default. Can be overritten via \"classes\" prop.\r\n */\r\nconst Button: FC<ButtonProps> = ({children, id, onClick, type = \"button\", size = \"medium\", classes = [], disabled, ...htmlProps}) => {\r\n  return (\r\n    <button\r\n      {...htmlProps}\r\n      /* Do not add disabled atribute due to accessibility reasons, make it class instead */\r\n      className={joinClassNames(styles.button, styles[size], (disabled ? styles.disabled : \"\"),  ...classes)}\r\n      /* Make sure if disabled is on, aria-disabled is set */\r\n      aria-disabled={Boolean(disabled)}\r\n      id={id}\r\n      type={type}\r\n      onClick={!disabled ? onClick : undefined}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import {VFC} from 'react';\r\nimport {joinClassNames} from \"../../../utils/joinClassNames\";\r\nimport {gray_bg} from \"../../../styles/colors\";\r\nimport {DividerProps} from \"./types\";\r\nimport styles from \"./Divider.module.css\";\r\n\r\n\r\n/**\r\n * Horizontal diver line.\r\n */\r\nconst Divider: VFC<DividerProps> = ({classes = []}) =>  <hr data-testid=\"divider\" className={joinClassNames(styles.divider, gray_bg, ...classes)} />;\r\n\r\nexport default Divider;\r\n","import {VFC} from 'react';\r\nimport styles from \"./Input.module.css\";\r\nimport {InputProps} from \"./types\";\r\nimport {joinClassNames} from \"../../../utils/joinClassNames\";\r\nimport {text_medium} from \"../../../styles/colors\";\r\n\r\n/**\r\n * Text or date input. Controlled via props.\r\n */\r\nconst Input: VFC<InputProps> = ({value, onChange, id, placeholder, type=\"text\", classes=[], ...htmlProps}) => {\r\n  return (\r\n    <input\r\n      {...htmlProps}\r\n      className={joinClassNames(styles.input, text_medium, ...classes)}\r\n      value={value}\r\n      onChange={e => onChange(e.target.value)}\r\n      placeholder={placeholder}\r\n      type={type}\r\n      id={id}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import {VFC} from 'react';\r\nimport {LabelProps} from \"./types\";\r\nimport styles from './Label.module.css';\r\nimport {joinClassNames} from \"../../../utils/joinClassNames\";\r\nimport {text_medium_dark} from \"../../../styles/colors\";\r\n\r\n/**\r\n *  Input label, should be given an input id via props.\r\n */\r\nconst Label: VFC<LabelProps> = ({idFor, title, classes = [], required = false, size = \"small\"}) => {\r\n  return (\r\n    <label\r\n      data-testid=\"label\"\r\n      htmlFor={idFor}\r\n      className={joinClassNames(text_medium_dark, styles.label, styles[size], ...classes)}\r\n    >\r\n      {title} {required ? \" *\" : \"\"}\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Label;\r\n","/**\r\n * Translates score in points, to value of star at specific index\r\n * @param index - starts at 1, so first star has index 1 not 0\r\n * @return 1 - for full star, 0.5 for half star, 0 for empty star\r\n */\r\nexport function scoreToStarValue(score: number, index: number): 1 | 0.5 | 0 {\r\n  if(score < 0) throw new TypeError('Score must be non negative.');\r\n  if(index < 1) throw new TypeError('1 is minimal index value');\r\n  const result = index - score;\r\n  return result <= 0 ? 1 : result <= 0.5 ? 0.5 : 0;\r\n}","import {VFC} from \"react\";\r\nimport {joinClassNames} from \"../../../utils/joinClassNames\";\r\nimport {StarProps} from './types';\r\nimport {teal} from \"../../../styles/colors\";\r\nimport styles from './Star.module.css';\r\n\r\n/**\r\n * Rating star component, read only, displays empty, full or half full star icon\r\n */\r\nconst Star: VFC<StarProps> = ({classes = [], rating = 1, size = \"medium\"}) => {\r\n  const sizeClass = size === \"small\" ? styles.small : size === \"medium\" ? styles.medium : styles.large;\r\n  const classlist = joinClassNames(\"material-icons\",teal, sizeClass,...classes); // custom classes will override defaults\r\n  const iconName = rating === 1 ? \"star\" : rating === 0.5 ? \"star_half\" : \"star_border\";\r\n  \r\n  return (\r\n    <div data-testid=\"star\" role=\"presentation\">\r\n      <span className={classlist}>\r\n        {iconName}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Star;\r\n","import React, {VFC} from 'react';\r\nimport {scoreToStarValue} from \"../../../utils/scoreToStarValue\";\r\nimport Star from \"../../atoms/star/Star\";\r\nimport {StarRatingProps} from \"./types\";\r\nimport styles from \"./StarRating.module.css\";\r\nimport {joinClassNames} from \"../../../utils/joinClassNames\";\r\nimport {text_medium} from \"../../../styles/colors\";\r\n\r\n/**\r\n * Component displays 5 star rating.\r\n */\r\nconst StarRating: VFC<StarRatingProps> = ({score, votes, id, size = \"medium\"}) => {\r\n  return (\r\n    <div\r\n      data-testid=\"star_rating\"\r\n      className={joinClassNames(styles.container, styles[\"container_\" + size])}\r\n      id={id}\r\n    >\r\n      <div\r\n        className={styles.wrapper}\r\n        aria-label={`Rating: ${ score }. Based on ${ votes } votes.`}\r\n      >\r\n        {[1, 2, 3, 4, 5].map(num => <Star rating={scoreToStarValue(score, num)} size={size} key={num} />)}\r\n      </div>\r\n      <span className={joinClassNames(styles.votes, text_medium, styles[\"votes_\" + size])}>{votes}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StarRating;\r\n","import {VFC} from 'react';\r\nimport {ReservationHeaderProps} from \"./types\";\r\nimport styles from \"./ReservationHeader.module.css\";\r\nimport StarRating from \"../star_rating/StarRating\";\r\nimport {joinClassNames} from \"../../../utils/joinClassNames\";\r\nimport {text_dark} from \"../../../styles/colors\";\r\n\r\n/**\r\n * Reservation card header, containing price, rating and number of votes.\r\n */\r\nconst ReservationHeader: VFC<ReservationHeaderProps> = ({price,score,votes,id}) => {\r\n  return (\r\n    <div data-testid=\"card_header\" id={id}>\r\n      <h3 className={joinClassNames(styles.price, text_dark)} aria-label=\"Reservation price\">{price} zł</h3>\r\n      <StarRating score={score} votes={votes} size=\"small\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReservationHeader;\r\n","export function findFocusableElements (el: Element): HTMLElement[] {\r\n  return Array.from(el.querySelectorAll<HTMLElement>('a[href], button, input, textarea, select, details,[tabindex]:not([tabindex=\"-1\"])'))\r\n    .filter(el => !el.hasAttribute('disabled') && !el.getAttribute(\"aria-hidden\"));\r\n}","import {Dispatch, SetStateAction, useEffect, useRef, useState} from \"react\";\r\nimport {crossBrowserElClosest} from \"../utils/crossBrowserElClosest\";\r\nimport {findFocusableElements} from \"../utils/findFocusableElements\";\r\n\r\n/**\r\n * Handles focus and simplified keyboard control of modal picker.\r\n * @param id - picker modal id\r\n */\r\nexport function usePickerKeyboardControl (pickerOpen: boolean, setPickerOpen: Dispatch<SetStateAction<boolean>>, id: string) {\r\n\r\n  const [lastActiveElement, setLastActiveElement] = useState<Element | null>(null);\r\n\r\n  // handle keyboard and mouse during select open\r\n  useEffect(() => {\r\n    // closes popup when clicked anywhere outside\r\n    const mouseHandler = (e: MouseEvent) => {\r\n      if (!crossBrowserElClosest(e.target as Element, \"#\" + id)) {\r\n        setPickerOpen(false);\r\n      }\r\n    };\r\n\r\n    // Handles keyboard interactions\r\n    const keyboardHandler = (e: KeyboardEvent) => {\r\n      // prevent default, all keyboard interactions hanlded programatically\r\n      e.preventDefault();\r\n      // handle escape key\r\n      if (e.key === \"Escape\") {\r\n        setPickerOpen(false);\r\n        return;\r\n      }\r\n\r\n      // All focusable elements within popup.\r\n      const picker = document.getElementById(id);\r\n      if (!picker) throw new Error('Picker modal not found in document. Given id : ' + id);\r\n\r\n      // Find all focusable elements\r\n      const elements: HTMLElement[] = findFocusableElements(picker);\r\n\r\n      const focusIndex = elements.findIndex((el) => el === document.activeElement);\r\n\r\n      // return if no elements to switch focus\r\n      if (!elements.length) return;\r\n\r\n      // Tab without shift pressed or down arrow\r\n      if ((e.key === \"Tab\" && !e.shiftKey) || e.key === \"ArrowRight\") {\r\n        if (focusIndex === -1 && (\"focus\" in elements[0])) elements[0].focus();\r\n        else elements[(focusIndex + 1) % elements.length].focus();\r\n        return;\r\n      }\r\n\r\n      // Tab without shift pressed or down arrow\r\n      if ((e.key === \"Tab\" && e.shiftKey) || e.key === \"ArrowLeft\") {\r\n        if (focusIndex === -1) return;\r\n        else elements[((focusIndex === 0 ? elements.length : focusIndex) - 1) % elements.length].focus();\r\n        return;\r\n      }\r\n\r\n      // if focus is on list element, click it on enter.\r\n      if (e.key === \"Enter\" && focusIndex > -1) {\r\n        elements[focusIndex].click();\r\n        return;\r\n      }\r\n    };\r\n\r\n    // attach listeners when popup open\r\n    if (pickerOpen) {\r\n      document.addEventListener(\"click\", mouseHandler);\r\n      document.addEventListener(\"keydown\", keyboardHandler);\r\n    }\r\n    return () => {\r\n      document.removeEventListener(\"click\", mouseHandler);\r\n      document.removeEventListener(\"keydown\", keyboardHandler);\r\n    };\r\n  }, [pickerOpen, setPickerOpen, id]);\r\n\r\n\r\n  // handle focus on open and close\r\n  useEffect(() => {\r\n    // open first focusable element and store currently focused\r\n    const picker = document.getElementById(id);\r\n    if (pickerOpen && picker && !lastActiveElement) {\r\n\r\n      setLastActiveElement(document.activeElement);\r\n\r\n      const firstFocusableEl = findFocusableElements(picker)[0];\r\n      if (firstFocusableEl) firstFocusableEl.focus();\r\n\r\n    } else if (!pickerOpen && lastActiveElement) {\r\n      (lastActiveElement as HTMLElement).focus();\r\n      setLastActiveElement(null);\r\n    }\r\n\r\n  }, [pickerOpen, lastActiveElement, setLastActiveElement, id]);\r\n\r\n}","declare global {\r\n  interface Element {\r\n    msMatchesSelector(selectors: string): boolean;\r\n  }\r\n}\r\n\r\n/**\r\n * Function returns true if selector matches element, or any ancestor in the element's ancestors chain.\r\n * Otherwise returns false.\r\n */\r\nexport function crossBrowserElClosest(el: Element, selector: string): boolean {\r\n  // incorrect typescript interface, cast element to any to avoid error\r\n  if (!(Element as any).prototype.matches) {\r\n    Element.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\r\n  }\r\n  \r\n  // incorrect typescript interface, cast element to any to avoid error\r\n  if ((Element as any).prototype.closest) return Boolean(el.closest(selector));\r\n\r\n  do {\r\n    if (el.matches(selector)) return true;\r\n    (el as unknown) = el.parentElement || el.parentNode;\r\n  } while (el !== null && el.nodeType === 1);\r\n\r\n  return false;\r\n}\r\n","import {useEffect, useRef} from 'react';\r\n\r\nexport const usePrevious = <T = any> (value: T) => {\r\n  const ref = useRef<T | undefined>();\r\n\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  }, [value]);\r\n  return ref.current;\r\n};","import {useEffect, useState, VFC} from \"react\";\r\nimport format from \"date-fns/format\";\r\nimport addMonths from \"date-fns/addMonths\";\r\nimport {DatePickerModalProps} from \"./types\";\r\nimport styles from './DatePicker.module.css';\r\nimport {joinClassNames} from \"../../../utils/joinClassNames\";\r\nimport {text_medium_dark, cyan_bg, text_white, text_medium} from \"../../../styles/colors\";\r\nimport {MonthDay} from \"../../organisms/ReservationCard/types\";\r\nimport {getCalendarMonthBoundries} from \"../../../utils/getCalendarMonthBoundries\";\r\nimport {usePrevious} from \"../../../hooks/usePrevious\";\r\nimport {computeCalendarDays} from \"../../../utils/computeCalendarDays\";\r\n\r\n/**\r\n */\r\nconst DAYS_OF_WEEK = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n\r\n\r\n\r\n\r\n/**\r\n * Displays calendar popup. \r\n * Do most of the dates calculations.\r\n */\r\nconst DatePickerModal: VFC<DatePickerModalProps> = ({open, id, availableDates, onDates}) => {\r\n  /* Date for calendar manipulation */\r\n  const [date, setDate] = useState<Date>(new Date());\r\n  const [monthDays, setMonthDays] = useState<MonthDay[]>([]);\r\n\r\n  // Use previous Date because availableDates array may be not memoized, causing constant component rerenders.\r\n  // Using prevDate will prevent hook belowe from recalculating monthDays all the time\r\n  const prevDate = usePrevious<Date>(date);\r\n\r\n\r\n  // Compute month days on each calendar date change\r\n  useEffect(() => {\r\n    if (!open) return;\r\n    // either no date yet or monthDays already computer and date hasn't changed\r\n    if (!date || (monthDays.length && date === prevDate)) return;\r\n\r\n    // calculate first and last day to display\r\n    const [start, end] = getCalendarMonthBoundries(date);\r\n\r\n    // calculate and set MonthDay object's array\r\n    setMonthDays(computeCalendarDays(start, end, availableDates, date));\r\n  }, [date, prevDate, open, availableDates, setMonthDays, monthDays]);\r\n\r\n  // Calculates number of weeks in month view. This will serve as rows in our calendar.\r\n  const calendarRows = Array.from({length: monthDays.length / 7}, (_, i) => i);\r\n\r\n  return (\r\n    <div\r\n      className={styles.modal}\r\n      hidden={!open}\r\n      aria-hidden={open ? \"false\" : \"true\"}\r\n      aria-modal={open ? \"true\" : \"false\"}\r\n      role=\"dialog\"\r\n      aria-label=\"Choose reservation dates\"\r\n      id={id}\r\n    >\r\n      <div\r\n\r\n      >\r\n        <div className={joinClassNames(styles.modal_header, cyan_bg, text_white)}>\r\n          <button className={styles.month_arrow_btn} onClick={() => setDate(prev => addMonths(prev, -1))}>\r\n            <span className={joinClassNames(text_medium_dark, styles.month_arrow, styles.month_arrow_left)}></span>\r\n\r\n          </button>\r\n          <div className={styles.month}>{format(date, \"LLLL\")} {date.getFullYear()}</div>\r\n          <button className={styles.month_arrow_btn} onClick={() => setDate(prev => addMonths(prev, 1))}>\r\n            <span className={joinClassNames(text_medium_dark, styles.month_arrow, styles.month_arrow_right)}></span>\r\n\r\n          </button>\r\n        </div>\r\n        <div role=\"grid\" className={styles.calendar_container}>\r\n          <div role=\"row\" className={styles.week_names}>\r\n            {DAYS_OF_WEEK.map(day => (\r\n              <div \r\n              key={day} \r\n              role=\"columnheader\"\r\n              className={joinClassNames(text_medium, styles.week_day)} \r\n              >\r\n                {day}\r\n              </div>\r\n            ))}\r\n          </div>\r\n          {calendarRows.map((index) => (\r\n            <div\r\n              role=\"row\"\r\n              key={\"row_\" + index}\r\n              className={styles.calendar_row}\r\n            >\r\n              {monthDays.filter((el, i) => i < ((index + 1) * 7) && i >= index * 7).map(el => (\r\n                <div\r\n                  onClick={() => {}}\r\n                  role=\"gridcell\"\r\n                  aria-label={`You choose ${el.dateString}`}\r\n                  tabIndex={0}\r\n                  data-date={el.dateString}\r\n                  key={el.dateString}\r\n                  className={styles.calendar_cell}\r\n                >\r\n                  {el.dateString}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div >\r\n  );\r\n};\r\n\r\nexport default DatePickerModal;\r\n","import startOfWeek from 'date-fns/startOfWeek';\r\nimport getDaysInMonth from 'date-fns/getDaysInMonth';\r\nimport endOfMonth from 'date-fns/endOfMonth';\r\nimport isSameDay from 'date-fns/isSameDay';\r\nimport startOfMonth from 'date-fns/startOfMonth';\r\nimport differenceInDays from 'date-fns/differenceInDays';\r\nimport addDays from 'date-fns/addDays';\r\nimport {CalendarDate} from \"../components/organisms/ReservationCard/types\";\r\n\r\n\r\n/**\r\n * returns first Sunday and last Saturday to display in month view (which usually contains 35 days, but sometimes 28 or 42)\r\n */\r\nexport function getCalendarMonthBoundries (date: CalendarDate): [CalendarDate, CalendarDate] {\r\n  // First day of month\r\n  const firstDay = startOfMonth(date);\r\n\r\n  // Last day of month\r\n  const lastDay = endOfMonth(date);\r\n\r\n  // Sunday of first week of the month, our start day\r\n  const firstDayOfWeek = startOfWeek(firstDay);\r\n\r\n  // Difference in days between start day of the month and start day of view\r\n  const daysToFirst = differenceInDays(firstDay, firstDayOfWeek);\r\n\r\n  // How many days given month has\r\n  const monthLength = getDaysInMonth(date);\r\n\r\n  // Some months need only 28 days to display in view \r\n  const shortView = monthLength === 28 && isSameDay(firstDay, firstDayOfWeek);\r\n\r\n  // Some months need 42 days to display in view \r\n  const longView = monthLength + daysToFirst > 35;\r\n\r\n  const viewDays = longView ? 42 : 35;\r\n\r\n  // How many days need to be added to last day of the month for the view to have last day on Saturday\r\n  const daysToAdd = viewDays - (daysToFirst + monthLength);\r\n\r\n\r\n  // Non-leap year February starting on Sunday\r\n  if (shortView) return [firstDay, lastDay];\r\n\r\n\r\n  // Return Sunday as first day, and Saturday as last\r\n  return [firstDayOfWeek, addDays(lastDay, daysToAdd)];\r\n}","import isToday from 'date-fns/isToday';\r\nimport getDay from 'date-fns/getDay';\r\nimport isBefore from 'date-fns/isBefore';\r\nimport differenceInCalendarDays from 'date-fns/differenceInCalendarDays';\r\nimport addDays from 'date-fns/addDays';\r\nimport isSameDay from 'date-fns/isSameDay';\r\nimport isSameMonth from 'date-fns/isSameMonth';\r\nimport format from \"date-fns/format\";\r\nimport {CalendarDate, MonthDay} from \"../components/organisms/ReservationCard/types\";\r\n\r\n/**\r\n * Function takes two dates as Date objects or timestamps and returns array of formatted MonthDay objects.\r\n */\r\nexport function computeCalendarDays (\r\n  startDate: CalendarDate,\r\n  endDate: CalendarDate,\r\n  availableDates: CalendarDate[],\r\n  selectedDate: CalendarDate = new Date()\r\n): MonthDay[] {\r\n\r\n  if (isBefore(endDate, startDate)) throw new TypeError('End date must not be before start date');\r\n  const daysDiff = differenceInCalendarDays(endDate, startDate);\r\n\r\n  // for performance reasons filter available dates now, rather than check it each time in a loop\r\n  availableDates = availableDates.filter(d => isSameMonth(d, selectedDate));\r\n\r\n  const days: MonthDay[] = [];\r\n\r\n  for (let i = 0; i <= daysDiff; i++) {\r\n    const currentDay = addDays(startDate, i);\r\n\r\n    days.push({\r\n      available: availableDates.some(d => isSameDay(d, currentDay)),\r\n      weekDay: getDay(currentDay),\r\n      today: isToday(currentDay),\r\n      timeStamp: currentDay.getTime(),\r\n      dateString: format(currentDay, \"dd/MM/yyyy\")\r\n    });\r\n  }\r\n  return days;\r\n}","import {useMemo, useState, VFC} from 'react';\r\nimport {DatePickerProps} from \"./types\";\r\nimport styles from './DatePicker.module.css';\r\nimport {joinClassNames} from \"../../../utils/joinClassNames\";\r\nimport {text_medium_dark, teal_light_bg, teal} from \"../../../styles/colors\";\r\nimport format from \"date-fns/format\";\r\nimport {usePickerKeyboardControl} from \"../../../hooks/usePickerKeyboardControl\";\r\nimport DatePickerModal from \"./DatePickerModal\";\r\n\r\nconst DatePicker: VFC<DatePickerProps> = ({startDate, endDate, id, availableDates}) => {\r\n  /* Handles picker state */\r\n  const [pickerOpen, setPickerOpen] = useState<boolean>(false);\r\n\r\n  const pickerId = id || \"reservation_date_picker\";\r\n  // use memoization for modalId, to prevent useEffect extensive calls;\r\n  const modalId = useMemo(() => id ? id + \"_modal\" : \"reservation_date_picker_modal\", [id]);\r\n\r\n  /* Dates formated to string */\r\n  const startDateString = startDate ? format(startDate, \"dd/MM/yyyy\") : \"Check In\";\r\n  const endDateString = endDate ? format(endDate, \"dd/MM/yyyy\") : \"Check Out\";\r\n\r\n  /* Concatenated classes of dates buttons */\r\n  const startDateClasses = (pickerOpen || startDate) ? joinClassNames(styles.date, teal, teal_light_bg) : styles.date;\r\n  const endDateClasses = endDate ? joinClassNames(styles.date, teal, teal_light_bg) : styles.date;\r\n\r\n\r\n  // Handles focus, and keyboard control\r\n  usePickerKeyboardControl(pickerOpen, setPickerOpen, modalId);\r\n\r\n  return (\r\n    <div data-testid=\"date_picker\" id={pickerId} className={styles.wrapper}>\r\n      <button\r\n        onClick={() => setPickerOpen(prev => !prev)}\r\n        className={joinClassNames(styles.picker, text_medium_dark, pickerOpen ? styles.modal_open : \"\")}\r\n        aria-controls={pickerId + \"_dialog\"}\r\n        aria-haspopup=\"true\"\r\n        aria-label=\"Controls reservation datepicker\"\r\n        aria-describedby={pickerId + \"_info\"}\r\n      >\r\n        <span className={startDateClasses}>{startDateString}</span>\r\n        <span className={joinClassNames(styles.arrow, text_medium_dark)}></span>\r\n        <span className={endDateClasses}>{endDateString}</span>\r\n      </button>\r\n      <span className=\"visually-hidden\" id={pickerId + \"_info\"}>This button opens popup dialog, where reservation dates can be chosen.</span>\r\n\r\n      <DatePickerModal\r\n        open={pickerOpen}\r\n        availableDates={availableDates}\r\n        id={modalId}\r\n        onDates={() => {}}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DatePicker;\r\n","import {VFC, FormEvent, useState} from 'react';\r\nimport {joinClassNames} from \"../../../utils/joinClassNames\";\r\nimport Button from \"../../atoms/button/Button\";\r\nimport Divider from \"../../atoms/divider/Divider\";\r\nimport Input from \"../../atoms/input/Input\";\r\nimport Label from \"../../atoms/label/Label\";\r\nimport ReservationHeader from \"../../molecules/card_header/ReservationHeader\";\r\nimport DatePicker from \"../../molecules/date_picker/DatePicker\";\r\nimport styles from './ReservationCard.module.css';\r\nimport {ReservationCardProps} from \"./types\";\r\n\r\n/**\r\n * Reservation Card component. Displays reservation info, and dates picking form. Handles validation of the form.\r\n */\r\nconst ReservationCard: VFC<ReservationCardProps> = ({\r\n  price, score, votes, onSubmit, startDate, endDate, availableDates, setEndDate, setStartDate\r\n}) => {\r\n  \r\n  /* Displays form errors, indicates validity of the form */\r\n  const [formError, setFormError] = useState(\"\");\r\n  /* Controls state of the picker */\r\n  const [pickerOpen, setPickerOpen] = useState(false);\r\n\r\n  /* Call prevent default, as page should not be reloaded */\r\n  const handleSubmit = (e: FormEvent<HTMLFormElement>): void => {\r\n    e.preventDefault();\r\n    onSubmit();\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={styles.card}>\r\n      <ReservationHeader price={price} score={score} votes={votes} />\r\n      <Divider />\r\n      <form onSubmit={handleSubmit}>\r\n\r\n        <div className={styles.formControl}>\r\n          <Label idFor=\"dummy1\" title=\"Dates\" size=\"small\" />\r\n          <DatePicker\r\n            availableDates={availableDates}\r\n            startDate={startDate}\r\n            endDate={endDate}\r\n            setStartDate={setStartDate}\r\n            setEndDate={setEndDate}\r\n          />\r\n        </div>\r\n\r\n        <div className={styles.formControl}>\r\n          <Label idFor=\"dummy1\" title=\"Dummy 1\" size=\"small\" />\r\n          <Input id=\"dummy1\" placeholder=\"Dummy content\" value=\"\" onChange={() => {}} />\r\n        </div>\r\n\r\n        <div className={styles.formControl}>\r\n          <Label idFor=\"dummy1\" title=\"Dummy 2\" size=\"small\" />\r\n          <Input id=\"dummy2\" placeholder=\"Dummy content 2\" value=\"\" onChange={() => {}} />\r\n        </div>\r\n\r\n        <div className={styles.formControl}>\r\n          <p className={joinClassNames(styles.errMsg, formError ? styles.error : \"\")}>\r\n            {formError}\r\n          </p>\r\n          <Button type=\"submit\" size=\"medium\" disabled={Boolean(formError)}>Submit</Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReservationCard;\r\n","import {VFC} from \"react\";\nimport styles from \"./App.module.css\";\nimport {joinClassNames} from \"../../../utils/joinClassNames\";\nimport {gray_light_bg} from \"../../../styles/colors\";\nimport ReservationCard from \"../../organisms/ReservationCard/ReservationCard\";\n\n\nconst App: VFC = () => {\n  return (\n    <div className={joinClassNames(styles.app, gray_light_bg)}>\n      <ReservationCard\n        score={4.5}\n        votes={100}\n        price={200}\n        availableDates={[11234]}\n        startDate={null}\n        endDate={null}\n        setEndDate={() => {}}\n        setStartDate={() => {}}\n        onSubmit={() => {}}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/global.css';\nimport App from './components/pages/app/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"ReservationCard_card__1GAHu\",\"formControl\":\"ReservationCard_formControl__9GbNR\",\"errMsg\":\"ReservationCard_errMsg__yFKAQ\",\"error\":\"ReservationCard_error__3Ebwq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"StarRating_container__3Jqz6\",\"wrapper\":\"StarRating_wrapper__14aQN\",\"container_small\":\"StarRating_container_small__1UnWI\",\"container_medium\":\"StarRating_container_medium__2DWbL\",\"container_large\":\"StarRating_container_large__386Mf\",\"votes\":\"StarRating_votes__3eIIG\",\"votes_small\":\"StarRating_votes_small__10K2U\",\"votes_medium\":\"StarRating_votes_medium__1ozC5\",\"votes_large\":\"StarRating_votes_large__Q8QB9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3zqH-\",\"small\":\"Button_small__3j52r\",\"medium\":\"Button_medium__3YM_0\",\"large\":\"Button_large__3qazZ\",\"disabled\":\"Button_disabled__DIU6j\"};"],"sourceRoot":""}